SHELL := /bin/bash

YARN := $(shell command -v yarn 2> /dev/null)
ifndef YARN
    $(error yarn is not available on your system, please install npm)
endif



app_name=phoenix
cur_dir=$(CURDIR)
dist_dir=$(CURDIR)/dist

occ=$(CURDIR)/../../occ
private_key=$(HOME)/.owncloud/certificates/$(app_name).key
certificate=$(HOME)/.owncloud/certificates/$(app_name).crt
sign=$(occ) integrity:sign-app --privateKey="$(private_key)" --certificate="$(certificate)"
sign_skip_msg="Skipping signing, either no key and certificate found in $(private_key) and $(certificate) or occ can not be found at $(occ)"
ifneq (,$(wildcard $(private_key)))
ifneq (,$(wildcard $(certificate)))
ifneq (,$(wildcard $(occ)))
	CAN_SIGN=true
endif
endif
endif

.DEFAULT_GOAL := help

help:
	@fgrep -h "##" $(MAKEFILE_LIST) | fgrep -v fgrep | sed -e 's/\\$$//' | sed -e 's/##//'

##
## Build targets
##--------------------------------------

.PHONY: dist
dist:                       ## Build distribution
dist: distdir javascript distconf sign package


.PHONY: javascript
javascript:
	$(YARN) dist
	$(YARN) install
	$(YARN) run build:prod

.PHONY: distdir
distdir:
	rm -rf $(dist_dir)

.PHONY: distconf
distconf:
	cp config.json.dist $(dist_dir)/config.json

.PHONY: sign
sign:
ifdef CAN_SIGN
	$(sign) --path="$(dist_dir)"
else
	@echo $(sign_skip_msg)
endif

.PHONY: package
package:
	mkdir $(CURDIR)/release
	tar -czf $(CURDIR)/release/$(app_name).tar.gz dist/*
